name: NChain
on:
  push:
    branches:
      - master

jobs:
  push-to-registry:
    name: Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        id: checkout
        uses: actions/checkout@v2
      - name: Push Docker Image 
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}
          repository: provide/nchain
          tags: "latest"

  deploy-api:
    name: Deploy to Production (API)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ci-process.sh
        shell: bash
        env:
          AWS_ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PRODUCTION_AWS_DEFAULT_REGION }}
          AWS_DEFAULT_OUTPUT: json
          ECR_REPOSITORY_NAME: provide/goldmine
          ECS_TASK_DEFINITION_FAMILY: goldmine
          ECS_CLUSTER: production
          ECS_SERVICE_NAME: nchain
          RUN_INTEGRATION_SUITE: false
        run: |
          chmod +x "${GITHUB_WORKSPACE}/ops/ci-process.sh"
          "${GITHUB_WORKSPACE}/ops/ci-process.sh"

  deploy-consumer:
    name: Deploy to Production (Consumer)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ci-process.sh
        shell: bash
        env:
          AWS_ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PRODUCTION_AWS_DEFAULT_REGION }}
          AWS_DEFAULT_OUTPUT: json
          ECR_REPOSITORY_NAME: provide/goldmine
          ECS_TASK_DEFINITION_FAMILY: goldmine-consumer
          ECS_CLUSTER: production
          ECS_SERVICE_NAME: nchain-consumer
          RUN_INTEGRATION_SUITE: false
        run: |
          chmod +x "${GITHUB_WORKSPACE}/ops/ci-process.sh"
          "${GITHUB_WORKSPACE}/ops/ci-process.sh"

  deploy-statsdaemon:
    name: Deploy to Production (statsdaemon)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ci-process.sh
        shell: bash
        env:
          AWS_ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PRODUCTION_AWS_DEFAULT_REGION }}
          AWS_DEFAULT_OUTPUT: json
          ECR_REPOSITORY_NAME: provide/goldmine
          ECS_TASK_DEFINITION_FAMILY: statsdaemon
          ECS_CLUSTER: production
          ECS_SERVICE_NAME: statsdaemon
          RUN_INTEGRATION_SUITE: false
        run: |
          chmod +x "${GITHUB_WORKSPACE}/ops/ci-process.sh"
          "${GITHUB_WORKSPACE}/ops/ci-process.sh"

  deploy-reachabilitydaemon:
    name: Deploy to Production (reachabilitydaemon)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ci-process.sh
        shell: bash
        env:
          AWS_ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PRODUCTION_AWS_DEFAULT_REGION }}
          AWS_DEFAULT_OUTPUT: json
          ECR_REPOSITORY_NAME: provide/goldmine
          ECS_TASK_DEFINITION_FAMILY: reachabilitydaemon
          ECS_CLUSTER: production
          ECS_SERVICE_NAME: reachabilitydaemon
          RUN_INTEGRATION_SUITE: false
        run: |
          chmod +x "${GITHUB_WORKSPACE}/ops/ci-process.sh"
          "${GITHUB_WORKSPACE}/ops/ci-process.sh"
